name: Builder

env:
  BUILD_ARGS: "--test"
  MONITORED_FILES: "build.yaml config.yaml Dockerfile rootfs run.py app.py"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  init:
    runs-on: ubuntu-latest
    name: Initialize builds
    outputs:
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed_files
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # For pull requests, compare with the base branch
            echo "Detecting changes for pull request..."
            git fetch origin ${{ github.base_ref }}
            git diff --name-only origin/${{ github.base_ref }}...HEAD > changed_files.txt
          else
            # For pushes, compare with the previous commit
            echo "Detecting changes for push..."
            # Check if this is the first commit
            if git rev-parse HEAD~1 >/dev/null 2>&1; then
              git diff --name-only HEAD~1...HEAD > changed_files.txt
            else
              # This is the first commit, so all files are "changed"
              echo "First commit detected, considering all files as changed"
              git ls-files > changed_files.txt
            fi
          fi
          
          # Read all changed files into a variable
          changed_files=$(cat changed_files.txt)
          echo "Changed files:"
          echo "$changed_files"
          
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$changed_files" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Find add-on directories
        id: addons
        uses: home-assistant/actions/helpers/find-addons@master

      - name: Get changed add-ons
        id: changed_addons
        run: |
          echo "Available add-ons: ${{ steps.addons.outputs.addons }}"
          echo "Monitored files: ${{ env.MONITORED_FILES }}"
          echo "Changed files: ${{ steps.changed_files.outputs.changed_files }}"
          
          declare -a changed_addons
          for addon in ${{ steps.addons.outputs.addons }}; do
            echo "Checking addon: $addon"
            if [[ "${{ steps.changed_files.outputs.changed_files }}" =~ $addon ]]; then
              echo "  - Addon $addon has changes"
              for file in ${{ env.MONITORED_FILES }}; do
                  echo "    - Checking for file: $addon/$file"
                  if [[ "${{ steps.changed_files.outputs.changed_files }}" =~ $addon/$file ]]; then
                    echo "      - Found changed file: $addon/$file"
                    if [[ ! "${changed_addons[@]}" =~ $addon ]]; then
                      changed_addons+=("\"${addon}\",");
                      echo "      - Added $addon to changed_addons array"
                    fi
                  fi
              done
            else
              echo "  - Addon $addon has no changes"
            fi
          done

          changed=$(echo ${changed_addons[@]} | rev | cut -c 2- | rev)

          if [[ -n ${changed} ]]; then
            echo "Changed add-ons: $changed";
            echo "changed=true" >> $GITHUB_OUTPUT;
            echo "addons=[$changed]" >> $GITHUB_OUTPUT;
          else
            echo "No add-on had any monitored files changed (${{ env.MONITORED_FILES }})";
            echo "changed=false" >> $GITHUB_OUTPUT;
          fi
  build:
    needs: init
    runs-on: ubuntu-latest
    if: needs.init.outputs.changed == 'true'
    name: Build ${{ matrix.arch }} ${{ matrix.addon }} add-on
    strategy:
      matrix:
        addon: ${{ fromJson(needs.init.outputs.changed_addons) }}
        arch: ["aarch64", "amd64", "armhf", "armv7", "i386"]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.2.2

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./${{ matrix.addon }}"

      - name: Check if add-on should be built
        id: check
        run: |
          if [[ "${{ steps.info.outputs.image }}" == "null" ]]; then
            echo "Image property is not defined, skipping build"
            echo "build_arch=false" >> $GITHUB_OUTPUT;
          elif [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
            echo "build_arch=true" >> $GITHUB_OUTPUT;
            echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)" >> $GITHUB_OUTPUT;
            if [[ -z "${{ github.head_ref }}" ]] && [[ "${{ github.event_name }}" == "push" ]]; then
                echo "BUILD_ARGS=" >> $GITHUB_ENV;
            fi
          else
            echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build";
            echo "build_arch=false" >> $GITHUB_OUTPUT;
          fi

      - name: Login to GitHub Container Registry
        if: env.BUILD_ARGS != '--test'
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ matrix.addon }} add-on
        if: steps.check.outputs.build_arch == 'true'
        uses: home-assistant/builder@2025.03.0
        with:
          args: |
            ${{ env.BUILD_ARGS }} \
            --${{ matrix.arch }} \
            --target /data/${{ matrix.addon }} \
            --image "${{ steps.check.outputs.image }}" \
            --docker-hub "ghcr.io/${{ github.repository_owner }}" \
            --addon
